(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{161:function(e,t,a){"use strict";a.r(t);var r=a(20),o=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"characters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Characters")]),e._v(" "),a("p",[e._v("Characters are novel actors used to represent scene entities that are placed on top of the "),a("router-link",{attrs:{to:"/guide/backgrounds.html"}},[e._v("backgrounds")]),e._v(".")],1),e._v(" "),a("p",[e._v("A character actor is defined with a name, appearance, visibility, transform (position, rotation, scale) and look direction. It can change appearance, visibility, transform and look direction over time.")]),e._v(" "),a("p",[e._v("Characters' behavior can be configured using "),a("code",[e._v("Naninovel -> Configuration -> Characters")]),e._v(" context menu; for available options see "),a("router-link",{attrs:{to:"/guide/configuration.html#characters"}},[e._v("configuration guide")]),e._v(". The characters' resources manager can be accessed using "),a("code",[e._v("Naninovel -> Resources -> Characters")]),e._v(" context menu.")],1),e._v(" "),a("p",[a("img",{attrs:{src:"/guide/add-character.png",alt:"Add Character"}})]),e._v(" "),a("p",[e._v("In novel scripts, characters are mostly controlled with "),a("router-link",{attrs:{to:"/api/#char"}},[a("code",[e._v("@char")])]),e._v(" action:")],1),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("; Shows character with name `Sora` with a default appearance.\n@char Sora\n\n; Same as above, but sets appearance to `Happy`.\n@char Sora.Happy\n\n; Same as above, but also positions the character 45% away from the left border\n; of the screen and 10% away from the bottom border; also makes him look to the left.\n@char Sora.Happy look:left pos:0.45,0.1\n")])])]),a("h2",{attrs:{id:"sprite-characters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprite-characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Sprite Characters")]),e._v(" "),a("p",[e._v("Sprite implementation of the character actors is the most common and simple one; it uses a set of "),a("a",{attrs:{href:"https://docs.unity3d.com/Manual/Sprites",target:"_blank",rel:"noopener noreferrer"}},[e._v("sprite"),a("OutboundLink")],1),e._v(" assets to represent appearances of the character. The source of the sprites could be "),a("code",[e._v(".png")]),e._v(" or "),a("code",[e._v(".jpg")]),e._v(" image files.")]),e._v(" "),a("p",[e._v("Sprite character appearance assets can be either managed by editor GUI or placed in a "),a("code",[e._v("Resources/Characters/CharacterName")]),e._v(" folder, "),a("code",[e._v("CharacterName")]),e._v(" being the name of the character, for an automatic exposure.")]),e._v(" "),a("h2",{attrs:{id:"diced-sprite-characters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diced-sprite-characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Diced Sprite Characters")]),e._v(" "),a("p",[e._v("Implemented via an open source (MIT license) third-party package "),a("a",{attrs:{href:"https://github.com/Elringus/SpriteDicing",target:"_blank",rel:"noopener noreferrer"}},[e._v("SpriteDicing"),a("OutboundLink")],1),e._v(" used to optimize build size and texture memory by reusing source sprite textures of the characters.")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.gyazo.com/af08d141e7a08b6a8e2ef60c07332bbf.png",alt:"Sprite Dicing"}})]),e._v(" "),a("p",[e._v("In order to be able to choose this implementation you have to first install "),a("a",{attrs:{href:"https://github.com/Elringus/SpriteDicing",target:"_blank",rel:"noopener noreferrer"}},[e._v("SpriteDicing"),a("OutboundLink")],1),e._v(". Consult project readme on GitHub for installation and usage instructions.")]),e._v(" "),a("p",[e._v("Then install "),a("a",{attrs:{href:"https://github.com/Elringus/NaninovelSpriteDicing/raw/master/NaninovelSpriteDicing.unitypackage",target:"_blank",rel:"noopener noreferrer"}},[e._v("NaninovelSpriteDicing extension package"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[a("code",[e._v("DicedSpriteAtlas")]),e._v(" assets containing character appearances are used as the resources for the diced sprite characters. Each appearance is mapped by name to the diced sprites contained in the atlas.")]),e._v(" "),a("p",[e._v("Note, that diced characters implementation currently doesn't support animated appearance changes (they're changed instantly).")]),e._v(" "),a("p",[e._v("The following video guide covers creating and configuring diced sprite atlas, adding new diced character based on the created atlas and controlling the character from a novel script.")]),e._v(" "),a("div",{staticClass:"video-container"},[a("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/6PdOAOsnhio",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})]),e._v(" "),a("h2",{attrs:{id:"animated-characters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#animated-characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Animated Characters")]),e._v(" "),a("p",[e._v("Animated characters is the most flexible characters actor implementation. It's based on a prefab with an "),a("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator",target:"_blank",rel:"noopener noreferrer"}},[e._v("animator"),a("OutboundLink")],1),e._v(" component attached to the root object. Appearance changes are routed to the animator component as "),a("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator.SetTrigger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SetTrigger"),a("OutboundLink")],1),e._v(" commands appearance being the trigger name. You're free to implement the behavior of the underlying object. For example, you can use a 3D rigged character model and route the appearance changes to the corresponding rig animations.")]),e._v(" "),a("p",[e._v("Animated characters can only be managed by editor GUI.")]),e._v(" "),a("h2",{attrs:{id:"live2d-characters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#live2d-characters","aria-hidden":"true"}},[e._v("#")]),e._v(" Live2D Characters")]),e._v(" "),a("p",[e._v("Live2D character implementation uses assets created with "),a("a",{attrs:{href:"https://www.live2d.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Live2D Cubism"),a("OutboundLink")],1),e._v(" 2D modeling and animation software.")]),e._v(" "),a("p",[e._v("In order to be able to use this implementation you have to first install "),a("a",{attrs:{href:"https://live2d.github.io/#unity",target:"_blank",rel:"noopener noreferrer"}},[e._v("Live2D Cubism SDK for Unity"),a("OutboundLink")],1),e._v(". Consult official Live2D docs for the installation and usage instructions.")]),e._v(" "),a("p",[e._v("Then install "),a("a",{attrs:{href:"https://github.com/Elringus/NaninovelLive2D/raw/master/NaninovelLive2D.unitypackage",target:"_blank",rel:"noopener noreferrer"}},[e._v("NaninovelLive2D extension package"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Live2D model prefab used as the resource for the implementation should have a "),a("code",[e._v("Naninovel.Live2DController")]),e._v(" component attached to the root object. Appearance changes are routed to the animator component as "),a("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator.SetTrigger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SetTrigger"),a("OutboundLink")],1),e._v(' commands appearance being the trigger name. Eg, if you have a "Kaori" Live2D character prefab and want to invoke a trigger with name "Surprise", use the following action:')]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("@char Kaori.Surprise\n")])])]),a("p",[e._v("Note, that the above action will only attempt to invoke a "),a("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Animator.SetTrigger.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SetTrigger"),a("OutboundLink")],1),e._v(' with "Surprise" argument on the animator controller attached to the prefab; you have to compose underlying animator state machine yourself.')]),e._v(" "),a("p",[e._v("Look direction can optionally be controlled via Live2D's "),a("code",[e._v("CubismLookController")]),e._v(" (can be disabled via "),a("code",[e._v("Control Look")]),e._v(" field of the "),a("code",[e._v("Naninovel.Live2DController")]),e._v(" component).")]),e._v(" "),a("p",[e._v("Be aware, that "),a("code",[e._v("Naninovel.Live2DController")]),e._v(' expects a "Drawables" gameobject inside the Live2D model prefab (created automatically when importing Live2D models to Unity); the controller will scale this gameobject at runtime in correspondence with "scale" parameter of the '),a("code",[e._v("@char")]),e._v(" actions. Hence, any local scale values set in the editor will be ignored. To set an initial scale for the Live2D prefabs, please use scale of the parent gameobject as "),a("a",{attrs:{href:"https://youtu.be/rw_Z69z0pAg?t=353",target:"_blank",rel:"noopener noreferrer"}},[e._v("shown in the video guide"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v('When Live2D extension is installed a "Live2D" item will appear in the Naninovel configuration menu providing following options:')]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.gyazo.com/435a4824f0ce0dd8c9c3f29d457bab24.png",alt:""}})]),e._v(" "),a("p",[e._v('Render layer specifies the layer to apply for the Live2D prefabs and culling mask to use for the cameras that will render the prefabs. Render camera field allows to use a custom setup for the render camera (the default render camera is stored inside the packages "Prefabs" folder). Camera offset allows to offset the render camera from the rendered prefab; you can use this parameters to uniformly position all the Live2D prefabs relative to the camera.')]),e._v(" "),a("p",[e._v("The following video guide covers exporting a Live2D character from Cubism Editor, configuring the prefab, creating a simple animator state machine and controlling the character from a novel script.")]),e._v(" "),a("div",{staticClass:"video-container"},[a("iframe",{attrs:{src:"https://www.youtube-nocookie.com/embed/rw_Z69z0pAg",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})])])},[],!1,null,null,null);o.options.__file="characters.md";t.default=o.exports}}]);